{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugoj\\\\OneDrive\\\\Documentos\\\\Tag-RFID\\\\front\\\\src\\\\components\\\\TagForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWebSocket } from 'react-use-websocket';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagForm = () => {\n  _s();\n  const [tagInput, setTagInput] = useState('');\n  const socketUrl = 'ws://localhost:8082'; // Substitua pelo URL real do seu servidor WebSocket\n  const {\n    sendMessage\n  } = useWebSocket(socketUrl);\n  const handleInputChange = event => {\n    setTagInput(event.target.value);\n  };\n  const sendTag = async () => {\n    try {\n      if (tagInput.trim() !== '') {\n        // Enviar a tag para o servidor via WebSocket\n        sendMessage({\n          data: JSON.stringify({\n            tag: tagInput\n          })\n        });\n        console.log('Sent tag via WebSocket:', tagInput);\n      }\n    } catch (error) {\n      console.error('Erro ao processar dados:', error);\n    }\n  };\n\n  // Assim que receber a mensagem do WebSocket, atualizar o estado com a tag recebida\n  const handleWebSocketMessage = async message => {\n    const data = JSON.parse(message.data);\n    console.log('Received message from WebSocket:', data);\n\n    // Colocar a identificação da tag no input\n    setTagInput(data.tag);\n\n    // Chamar a API POST\n    try {\n      const response = await axios.post('http://localhost:8082/api/tags', {\n        tag: data.tag\n      });\n      console.log('Sent tag via POST:', data.tag);\n      console.log('API Response:', response.data);\n    } catch (error) {\n      console.error('Erro ao chamar a API POST:', error);\n    }\n  };\n\n  // Configurar o hook useWebSocket com a função de callback para mensagens\n  useWebSocket(socketUrl, {\n    onMessage: handleWebSocketMessage\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Tag (React)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tagInput\",\n        children: \"Tag:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"tagInput\",\n        value: tagInput,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: sendTag,\n        children: \"Create Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TagForm, \"MYIH3al1s1DyEx21RvdDpdBd4Zc=\", false, function () {\n  return [useWebSocket, useWebSocket];\n});\n_c = TagForm;\nexport default TagForm;\nvar _c;\n$RefreshReg$(_c, \"TagForm\");","map":{"version":3,"names":["React","useState","useWebSocket","axios","jsxDEV","_jsxDEV","TagForm","_s","tagInput","setTagInput","socketUrl","sendMessage","handleInputChange","event","target","value","sendTag","trim","data","JSON","stringify","tag","console","log","error","handleWebSocketMessage","message","parse","response","post","onMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hugoj/OneDrive/Documentos/Tag-RFID/front/src/components/TagForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useWebSocket } from 'react-use-websocket';\r\nimport axios from 'axios';\r\n\r\nconst TagForm = () => {\r\n  const [tagInput, setTagInput] = useState('');\r\n  const socketUrl = 'ws://localhost:8082'; // Substitua pelo URL real do seu servidor WebSocket\r\n  const { sendMessage } = useWebSocket(socketUrl);\r\n\r\n  const handleInputChange = (event) => {\r\n    setTagInput(event.target.value);\r\n  };\r\n\r\n  const sendTag = async () => {\r\n    try {\r\n      if (tagInput.trim() !== '') {\r\n        // Enviar a tag para o servidor via WebSocket\r\n        sendMessage({ data: JSON.stringify({ tag: tagInput }) });\r\n        console.log('Sent tag via WebSocket:', tagInput);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao processar dados:', error);\r\n    }\r\n  };\r\n\r\n  // Assim que receber a mensagem do WebSocket, atualizar o estado com a tag recebida\r\n  const handleWebSocketMessage = async (message) => {\r\n    const data = JSON.parse(message.data);\r\n    console.log('Received message from WebSocket:', data);\r\n\r\n    // Colocar a identificação da tag no input\r\n    setTagInput(data.tag);\r\n\r\n    // Chamar a API POST\r\n    try {\r\n      const response = await axios.post('http://localhost:8082/api/tags', { tag: data.tag });\r\n      console.log('Sent tag via POST:', data.tag);\r\n      console.log('API Response:', response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao chamar a API POST:', error);\r\n    }\r\n  };\r\n\r\n  // Configurar o hook useWebSocket com a função de callback para mensagens\r\n  useWebSocket(socketUrl, { onMessage: handleWebSocketMessage });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create Tag (React)</h1>\r\n      <form>\r\n        <label htmlFor=\"tagInput\">Tag:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"tagInput\"\r\n          value={tagInput}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <button type=\"button\" onClick={sendTag}>\r\n          Create Tag\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}