{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugoj\\\\OneDrive\\\\Documentos\\\\Tag-RFID\\\\front\\\\src\\\\components\\\\TagForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagForm = () => {\n  _s();\n  const [tag, setTag] = useState('');\n  const [result, setResult] = useState('');\n\n  // UseEffect para lidar com a leitura da tag RFID\n  useEffect(() => {\n    const handleRFIDRead = event => {\n      // Obtenha o valor lido do RFID e atualize o estado\n      const rfidValue = event.detail; // Substitua com a forma correta de obter o valor do leitor RFID\n      setTag(rfidValue);\n    };\n\n    // Adiciona um ouvinte de evento para a leitura do RFID\n    document.addEventListener('RFIDRead', handleRFIDRead);\n\n    // Remove o ouvinte do evento quando o componente é desmontado\n    return () => {\n      document.removeEventListener('RFIDRead', handleRFIDRead);\n    };\n  }, []); // A lista de dependências vazia garante que este efeito só seja executado uma vez\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.get('http://localhost:8082/rota', {\n        params: {\n          tag: tag\n        }\n      });\n      setResult(response.data);\n\n      // Se a tag foi encontrada no servidor, você pode decidir se deseja manter a tag no campo de entrada\n      if (response.data === 'ID da tag RFID recebido e adicionado ao banco de dados com sucesso.') {\n        // Não é necessário atualizar explicitamente o estado do tag aqui, pois ele já foi atualizado com o valor lido do RFID\n      }\n    } catch (error) {\n      console.error('Erro ao fazer a solicitação:', error);\n      setResult('Erro ao fazer a solicitação.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Front-end para Rota\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tagInput\",\n        children: \"Tag RFID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"tagInput\",\n        name: \"tag\",\n        value: tag,\n        onChange: e => setTag(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TagForm, \"kNWCdCtqLqVYD36Zxnp9qRETCuA=\");\n_c = TagForm;\nexport default TagForm;\nvar _c;\n$RefreshReg$(_c, \"TagForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TagForm","_s","tag","setTag","result","setResult","handleRFIDRead","event","rfidValue","detail","document","addEventListener","removeEventListener","handleSubmit","preventDefault","response","get","params","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/hugoj/OneDrive/Documentos/Tag-RFID/front/src/components/TagForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TagForm = () => {\r\n  const [tag, setTag] = useState('');\r\n  const [result, setResult] = useState('');\r\n\r\n  // UseEffect para lidar com a leitura da tag RFID\r\n  useEffect(() => {\r\n    const handleRFIDRead = (event) => {\r\n      // Obtenha o valor lido do RFID e atualize o estado\r\n      const rfidValue = event.detail; // Substitua com a forma correta de obter o valor do leitor RFID\r\n      setTag(rfidValue);\r\n    };\r\n\r\n    // Adiciona um ouvinte de evento para a leitura do RFID\r\n    document.addEventListener('RFIDRead', handleRFIDRead);\r\n\r\n    // Remove o ouvinte do evento quando o componente é desmontado\r\n    return () => {\r\n      document.removeEventListener('RFIDRead', handleRFIDRead);\r\n    };\r\n  }, []); // A lista de dependências vazia garante que este efeito só seja executado uma vez\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:8082/rota', {\r\n        params: {\r\n          tag: tag,\r\n        },\r\n      });\r\n\r\n      setResult(response.data);\r\n\r\n      // Se a tag foi encontrada no servidor, você pode decidir se deseja manter a tag no campo de entrada\r\n      if (response.data === 'ID da tag RFID recebido e adicionado ao banco de dados com sucesso.') {\r\n        // Não é necessário atualizar explicitamente o estado do tag aqui, pois ele já foi atualizado com o valor lido do RFID\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao fazer a solicitação:', error);\r\n      setResult('Erro ao fazer a solicitação.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Front-end para Rota</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"tagInput\">Tag RFID:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"tagInput\"\r\n          name=\"tag\"\r\n          value={tag}\r\n          onChange={(e) => setTag(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n\r\n      <div>{result}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}