{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugoj\\\\OneDrive\\\\Documentos\\\\Tag-RFID\\\\front\\\\src\\\\components\\\\EnterLeft.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport useWebSocket from \"react-use-websocket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnterLeft = () => {\n  _s();\n  const [id_user, setIdUser] = useState(\"\");\n  const [tag, setTag] = useState(\"\");\n  const [isCardRead, setIsCardRead] = useState(false);\n  const [showTag, setShowTag] = useState(false);\n  const [action, setAction] = useState(\"\");\n  const socketUrl = \"ws://localhost:8082/\";\n  const {\n    lastMessage\n  } = useWebSocket(socketUrl);\n  const determineAction = data => {\n    // Se o horário estiver presente, considera como saída, caso contrário, considera como entrada\n    return data.time ? \"Saida\" : \"Entrada\";\n  };\n  useEffect(() => {\n    if (lastMessage !== null) {\n      const data = JSON.parse(lastMessage.data);\n      setIdUser(data.id_user);\n      setTag(data.tag);\n\n      // A leitura do cartão ocorreu apenas se o valor de \"tag\" for diferente\n      // do valor anterior.\n      if (data.tag !== tag) {\n        setIsCardRead(true);\n        setShowTag(true);\n\n        // Define um temporizador para esconder a tag após 10 segundos\n        setTimeout(() => {\n          setShowTag(false);\n          setIsCardRead(false);\n        }, 10000);\n        const inferredAction = determineAction(data);\n        setAction(inferredAction);\n      }\n    }\n  }, [lastMessage, tag]);\n  useEffect(() => {\n    const sendRequest = async () => {\n      try {\n        const response = await axios.put(\"http://localhost:8082/register/\", {\n          tag\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    if (isCardRead) {\n      sendRequest();\n    }\n  }, [isCardRead, tag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isCardRead && showTag && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Leitura do cart\\xE3o: \", action]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID do Usu\\xE1rio: \", id_user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tag: \", tag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(EnterLeft, \"U8h1+pPyetV/pb8g/jJB/hB+iek=\", false, function () {\n  return [useWebSocket];\n});\n_c = EnterLeft;\nexport default EnterLeft;\nvar _c;\n$RefreshReg$(_c, \"EnterLeft\");","map":{"version":3,"names":["React","useState","useEffect","axios","useWebSocket","jsxDEV","_jsxDEV","EnterLeft","_s","id_user","setIdUser","tag","setTag","isCardRead","setIsCardRead","showTag","setShowTag","action","setAction","socketUrl","lastMessage","determineAction","data","time","JSON","parse","setTimeout","inferredAction","sendRequest","response","put","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hugoj/OneDrive/Documentos/Tag-RFID/front/src/components/EnterLeft.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport useWebSocket from \"react-use-websocket\";\r\n\r\nconst EnterLeft = () => {\r\n  const [id_user, setIdUser] = useState(\"\");\r\n  const [tag, setTag] = useState(\"\");\r\n  const [isCardRead, setIsCardRead] = useState(false);\r\n  const [showTag, setShowTag] = useState(false);\r\n  const [action, setAction] = useState(\"\");\r\n\r\n  const socketUrl = \"ws://localhost:8082/\";\r\n  const { lastMessage } = useWebSocket(socketUrl);\r\n\r\n  const determineAction = (data) => {\r\n    // Se o horário estiver presente, considera como saída, caso contrário, considera como entrada\r\n    return data.time ? \"Saida\" : \"Entrada\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (lastMessage !== null) {\r\n      const data = JSON.parse(lastMessage.data);\r\n      setIdUser(data.id_user);\r\n      setTag(data.tag);\r\n\r\n      // A leitura do cartão ocorreu apenas se o valor de \"tag\" for diferente\r\n      // do valor anterior.\r\n      if (data.tag !== tag) {\r\n        setIsCardRead(true);\r\n        setShowTag(true);\r\n\r\n        // Define um temporizador para esconder a tag após 10 segundos\r\n        setTimeout(() => {\r\n          setShowTag(false);\r\n          setIsCardRead(false);\r\n        }, 10000);\r\n        const inferredAction = determineAction(data);\r\n        setAction(inferredAction);\r\n      }\r\n    }\r\n  }, [lastMessage, tag]);\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await axios.put(\"http://localhost:8082/register/\", { tag });\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    if (isCardRead) {\r\n      sendRequest();\r\n    }\r\n  }, [isCardRead, tag]);\r\n\r\n  return (\r\n    <div>\r\n    {/* Nova parte para exibir a ação */}\r\n    {isCardRead && showTag && (\r\n      <div>\r\n        <p>Leitura do cartão: {action}</p>\r\n        <p>ID do Usuário: {id_user}</p>\r\n        <p>Tag: {tag}</p>\r\n      </div>\r\n    )}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default EnterLeft;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMkB,SAAS,GAAG,sBAAsB;EACxC,MAAM;IAAEC;EAAY,CAAC,GAAGhB,YAAY,CAACe,SAAS,CAAC;EAE/C,MAAME,eAAe,GAAIC,IAAI,IAAK;IAChC;IACA,OAAOA,IAAI,CAACC,IAAI,GAAG,OAAO,GAAG,SAAS;EACxC,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIkB,WAAW,KAAK,IAAI,EAAE;MACxB,MAAME,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACL,WAAW,CAACE,IAAI,CAAC;MACzCZ,SAAS,CAACY,IAAI,CAACb,OAAO,CAAC;MACvBG,MAAM,CAACU,IAAI,CAACX,GAAG,CAAC;;MAEhB;MACA;MACA,IAAIW,IAAI,CAACX,GAAG,KAAKA,GAAG,EAAE;QACpBG,aAAa,CAAC,IAAI,CAAC;QACnBE,UAAU,CAAC,IAAI,CAAC;;QAEhB;QACAU,UAAU,CAAC,MAAM;UACfV,UAAU,CAAC,KAAK,CAAC;UACjBF,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,EAAE,KAAK,CAAC;QACT,MAAMa,cAAc,GAAGN,eAAe,CAACC,IAAI,CAAC;QAC5CJ,SAAS,CAACS,cAAc,CAAC;MAC3B;IACF;EACF,CAAC,EAAE,CAACP,WAAW,EAAET,GAAG,CAAC,CAAC;EAEtBT,SAAS,CAAC,MAAM;IACd,MAAM0B,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,iCAAiC,EAAE;UAAEnB;QAAI,CAAC,CAAC;QAC5EoB,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACP,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAED,IAAIpB,UAAU,EAAE;MACde,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACf,UAAU,EAAEF,GAAG,CAAC,CAAC;EAErB,oBACEL,OAAA;IAAA4B,QAAA,EAECrB,UAAU,IAAIE,OAAO,iBACpBT,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,GAAG,wBAAmB,EAACjB,MAAM;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClChC,OAAA;QAAA4B,QAAA,GAAG,oBAAe,EAACzB,OAAO;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BhC,OAAA;QAAA4B,QAAA,GAAG,OAAK,EAACvB,GAAG;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAAC9B,EAAA,CAjEID,SAAS;EAAA,QAQWH,YAAY;AAAA;AAAAmC,EAAA,GARhChC,SAAS;AAmEf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}