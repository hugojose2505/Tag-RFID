{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugoj\\\\OneDrive\\\\Documentos\\\\Tag-RFID\\\\front\\\\src\\\\components\\\\TagForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport useWebSocket from 'react-use-websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagForm = () => {\n  _s();\n  const [sendMessage, lastMessage, readyState] = useWebSocket(\"ws://localhost:8082/\"); // Substitua pelo seu servidor e porta\n  const [currentTag, setCurrentTag] = useState('Loading...');\n  const [currentName, setCurrentName] = useState('');\n  const [timestamp, setTimestamp] = useState('Loading...');\n  useEffect(() => {\n    if (lastMessage !== null) {\n      const data = JSON.parse(lastMessage.data);\n      if (data.tag === 'requestName') {\n        // Se o servidor solicitar um nome, você pode adicionar lógica aqui para responder\n        // por exemplo: sendMessage(JSON.stringify({ name: 'seu_nome' }));\n      } else {\n        setCurrentTag(`Current RFID Tag: ${data.tag}`);\n        setCurrentName(`Name: ${data.name}`);\n        if (data.timestamp) {\n          setTimestamp(`Timestamp: ${data.timestamp}`);\n        }\n      }\n    }\n  }, [lastMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RFID Tags Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"currentTag\",\n      children: currentTag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"currentName\",\n      children: currentName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"timestamp\",\n      children: timestamp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        const name = e.target.elements.tagName.value;\n        // Envie o nome associado à tag RFID\n        sendMessage(JSON.stringify({\n          name\n        }));\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tagName\",\n        children: \"Tag Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"tagName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TagForm, \"A0m5etIZ3veqdk8gucJs4BVyuRQ=\", false, function () {\n  return [useWebSocket];\n});\n_c = TagForm;\nexport default TagForm;\nvar _c;\n$RefreshReg$(_c, \"TagForm\");","map":{"version":3,"names":["React","useEffect","useState","useWebSocket","jsxDEV","_jsxDEV","TagForm","_s","sendMessage","lastMessage","readyState","currentTag","setCurrentTag","currentName","setCurrentName","timestamp","setTimestamp","data","JSON","parse","tag","name","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","e","preventDefault","target","elements","tagName","value","stringify","htmlFor","type","_c","$RefreshReg$"],"sources":["C:/Users/hugoj/OneDrive/Documentos/Tag-RFID/front/src/components/TagForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport  useWebSocket from 'react-use-websocket';\r\n\r\nconst TagForm = () => {\r\n  const [sendMessage, lastMessage, readyState] = useWebSocket(\"ws://localhost:8082/\"); // Substitua pelo seu servidor e porta\r\n  const [currentTag, setCurrentTag] = useState('Loading...');\r\n  const [currentName, setCurrentName] = useState('');\r\n  const [timestamp, setTimestamp] = useState('Loading...');\r\n\r\n  useEffect(() => {\r\n    if (lastMessage !== null) {\r\n      const data = JSON.parse(lastMessage.data);\r\n\r\n      if (data.tag === 'requestName') {\r\n        // Se o servidor solicitar um nome, você pode adicionar lógica aqui para responder\r\n        // por exemplo: sendMessage(JSON.stringify({ name: 'seu_nome' }));\r\n      } else {\r\n        setCurrentTag(`Current RFID Tag: ${data.tag}`);\r\n        setCurrentName(`Name: ${data.name}`);\r\n        if (data.timestamp) {\r\n          setTimestamp(`Timestamp: ${data.timestamp}`);\r\n        }\r\n      }\r\n    }\r\n  }, [lastMessage]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>RFID Tags Viewer</h1>\r\n      <p id=\"currentTag\">{currentTag}</p>\r\n      <p id=\"currentName\">{currentName}</p>\r\n      <p id=\"timestamp\">{timestamp}</p>\r\n\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          const name = e.target.elements.tagName.value;\r\n          // Envie o nome associado à tag RFID\r\n          sendMessage(JSON.stringify({ name }));\r\n        }}\r\n      >\r\n        <label htmlFor=\"tagName\">Tag Name:</label>\r\n        <input type=\"text\" id=\"tagName\" />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}